version: 2.1

executors:
  my-executor:
    docker:
      - image: circleci/ruby:3.0.2-node-browsers
        environment:
          RAILS_ENV: test

commands:
  load_deps:
    description: install bundler and load bundle from cache
    steps:
      - run: |
          gem install bundler -v 2.2.22
          bundle config set path vendor/bundle
      - restore_cache:
          keys:
            - dependencies-{{ .Environment.CACHE_VERSION }}-{{ checksum "Gemfile.lock" }}
            - dependencies-{{ .Environment.CACHE_VERSION }}-

  install_deps:
    description: install bundle
    steps:
      - run: |
          sudo apt-get install cmake
          bundle install --jobs=4 --retry=3
      - save_cache:
          key: dependencies-{{ .Environment.CACHE_VERSION }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  run_rspec:
    description: "run rspec command"
    steps:
      - run:
          command: |
            bundle exec rails db:create
            bundle exec rails db:migrate
      - run:
          command: |
            bundle exec rspec \
              --format RspecJunitFormatter \
              --out test_results/rspec.xml \
              --format progress \
              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split)
      - store_test_results:
          path: test_results
      - run:
          name: Store coverage report
          command: |
            mkdir -p /tmp/coverage
            mv coverage/lcov/*.lcov /tmp/coverage/
            mv coverage/.resultset.json "/tmp/coverage/.resultset-${CIRCLE_NODE_INDEX}.json"
      - persist_to_workspace:
          root: /tmp/coverage
          paths: .
      - store_artifacts:
          path: /tmp/coverage
          destination: coverage

  report_coverage:
    description: generate coverage report html
    steps:
      - run:
          name: generate coverage report html
          command: |
            bundle exec ruby -e "require 'simplecov'; SimpleCov.collate Dir['/tmp/coverage/.resultset*.json'], 'rails'"
      - store_artifacts:
          path: coverage

  analyse_coverage:
    description: analyse coverage by undercover
    steps:
      - run:
          name: analyse coverage
          command: |
            bundle exec undercover --lcov /tmp/coverage/*.lcov --compare origin/master

references:
  attach_workspace: &attach_workspace
    at: ~/project

jobs:
  setup:
    executor: my-executor
    steps:
      - checkout
      - attach_workspace: *attach_workspace
      - load_deps
      - install_deps

  test_backend:
    executor: my-executor
    parallelism: 2
    steps:
      - checkout
      - attach_workspace: *attach_workspace
      - load_deps
      - run_rspec
      - store_test_results:
            path: tmp/test-results

  analyse_and_report_coverage:
    docker:
      - image: circleci/ruby:3.0.2-node-browsers
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/coverage
      - load_deps
      - report_coverage
      - analyse_coverage

  report_coverage_only:
    docker:
      - image: circleci/ruby:3.0.2-node-browsers
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/coverage
      - load_deps
      - report_coverage

workflows:
  build:
    jobs:
      - setup
      - test_backend:
          requires:
            - setup
      - analyse_and_report_coverage:
          requires:
            - test_backend
          filters:
            branches:
              ignore: master
      - report_coverage_only:
          requires:
            - test_backend
          filters:
            branches:
              only: master
